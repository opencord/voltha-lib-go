{
  "comments": [
    {
      "key": {
        "uuid": "196a4f83_6813cbdb",
        "filename": "pkg/log/utils.go",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-08-18T18:51:32Z",
      "side": 1,
      "message": "fwiw, the mutex could be done as \ntype LogFeaturesManager struct {\n        sync.Mutex\n        isTtacePubl ...\n\nthen the usage would be to just\n\nlfm :\u003d \u0026LogFeaturesManger{}\nlfm.Lock()",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 36
      },
      "revId": "bf53ff486fa1dee15d8397c2eab7f5dd4b63be17",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e480d2_4937008a",
        "filename": "pkg/log/utils.go",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-08-18T19:11:42Z",
      "side": 1,
      "message": "Disagree in this case @David.  This would expose the Lock() / Unlock() methods to the caller, but they should only be called internally.\n\nNit: Variable can just be called \"lock\" or \"mutex\".  (variables can probably have much shorter names and still be sufficiently descriptive, since they are no longer global.)",
      "parentUuid": "196a4f83_6813cbdb",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 36
      },
      "revId": "bf53ff486fa1dee15d8397c2eab7f5dd4b63be17",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c7b50d6_37510927",
        "filename": "pkg/log/utils.go",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-08-18T19:11:42Z",
      "side": 1,
      "message": "Nit: If possible, consider using `const`, or making the variable name lowercase.",
      "revId": "bf53ff486fa1dee15d8397c2eab7f5dd4b63be17",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4123a3d9_2b6353fc",
        "filename": "pkg/log/utils.go",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-08-18T19:19:26Z",
      "side": 1,
      "message": "Whoops, misread this somehow, thought it was uppercase.  nvm.",
      "parentUuid": "8c7b50d6_37510927",
      "revId": "bf53ff486fa1dee15d8397c2eab7f5dd4b63be17",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "913727b0_53ed40e8",
        "filename": "pkg/log/utils.go",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-08-18T19:19:26Z",
      "side": 1,
      "message": "functions which need access to the global variable should be implemented on the LogFeaturesManager struct.\n\ni.e.:\n\nfunc (lfm *LogFeaturesManager) foo() {...}\n\nOtherwise there\u0027s not much encapsulation provided by the struct.\n\nCallers should either create their own instance of LogFeaturesManager, or call like package.GlobalVariable.Foo()",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 4
      },
      "revId": "bf53ff486fa1dee15d8397c2eab7f5dd4b63be17",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    }
  ]
}
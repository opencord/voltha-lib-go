{
  "comments": [
    {
      "key": {
        "uuid": "cd86b44e_7bf5a087",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-26T14:48:16Z",
      "side": 1,
      "message": "This will timeout since this context is no longer valid.  See comments on waitForMessages()",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fae515e_13a610d4",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-06-30T12:38:11Z",
      "side": 1,
      "message": "Could not understand this timeout concern, please elaborate.",
      "parentUuid": "cd86b44e_7bf5a087",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2313992_81889d49",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-30T12:57:00Z",
      "side": 1,
      "message": "See comments added waitForMessages().    \n\nThis change will need end-to-end testing (i.e. with both the Core and openOLT using this library), preferably with scale testing, before it can be merged.",
      "parentUuid": "0fae515e_13a610d4",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae9817b1_adcfc768",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 824,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-26T14:48:16Z",
      "side": 1,
      "message": "The context passed in is when a request handler has been created to listen for messages from kafka.   In handleMessage() the same context is passed around to handle a request which will timed out since that context is no longer valid.  The callee\u0027s context is not sent over kafka (something that is possible with gRPC).",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1afa303_73d0d6da",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 824,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-06-30T12:38:11Z",
      "side": 1,
      "message": "I don\u0027t think context passed to this method is enhanced with deadline. So here it should be safe to use it in further call.",
      "parentUuid": "ae9817b1_adcfc768",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36e38c51_c4033d8d",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 824,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-30T12:57:00Z",
      "side": 1,
      "message": "Neha, check the SubscribeWithRequestHandlerInterface() for instance.   The callee passes its context to that method and then that method invokes waitForMessages() with that same context. And in turn the same context is being used by handleMessage() and so on so forth.     This library code cannot guarantee that the callee\u0027s context has a timeout or not.  As such it would be better to invoke the internal method waitForMessages() with a background context instead of the callee\u0027s context.",
      "parentUuid": "b1afa303_73d0d6da",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9de32022_639f8ece",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 824,
      "author": {
        "id": 1000675
      },
      "writtenOn": "2020-07-06T14:17:05Z",
      "side": 1,
      "message": "For now, we have just done the changes for adding the ctx in the logger and passing the ctx across the methods. \nYes we will be handling such cases in further jiras and  we will be using the method \"CopySpanIntoNewContext()\" added as apart of VOL-3142 changes for the same. https://gerrit.opencord.org/c/voltha-lib-go/+/19243/15/pkg/log/utils.go#235",
      "parentUuid": "36e38c51_c4033d8d",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9248da01_905b0c36",
        "filename": "pkg/kafka/kafka_inter_container_library.go",
        "patchSetId": 1
      },
      "lineNbr": 824,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-07-06T15:10:52Z",
      "side": 1,
      "message": "\"for now\" context.Background() should be passed to any new gothread, otherwise cases like this are likely to be missed later.",
      "parentUuid": "9de32022_639f8ece",
      "revId": "f40e7a9ae8592bbacb17ff7fac4f7c7864c62b4c",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    }
  ]
}
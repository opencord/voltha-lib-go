{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bd06c48f_d574c58f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2022-01-26T00:11:31Z",
      "side": 1,
      "message": "There is quite a lot happening here. From what I understood, this look ok to me. We will know more when we test. +1",
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1040b300_69f9cb7a",
        "filename": "pkg/grpc/client.go",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T14:10:19Z",
      "side": 1,
      "message": "magic number? why 1 vs 5 vs 10? should this be configurable.",
      "range": {
        "startLine": 111,
        "startChar": 43,
        "endLine": 111,
        "endChar": 45
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ca9ef68_ec7d97de",
        "filename": "pkg/grpc/client.go",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2022-01-25T17:23:03Z",
      "side": 1,
      "message": "Why the \"Send\" here? Can be something like RunWithTimeout for ex.",
      "range": {
        "startLine": 230,
        "startChar": 5,
        "endLine": 230,
        "endChar": 20
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92222e59_32884944",
        "filename": "pkg/grpc/client.go",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2022-01-27T15:59:39Z",
      "side": 1,
      "message": "debug ?",
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0f444c_50f607f0",
        "filename": "pkg/grpc/client.go",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T14:10:19Z",
      "side": 1,
      "message": "this means a partial match of names works here? is this what we want?",
      "range": {
        "startLine": 294,
        "startChar": 13,
        "endLine": 294,
        "endChar": 21
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a93f2ec_ba3b0241",
        "filename": "pkg/grpc/client.go",
        "patchSetId": 2
      },
      "lineNbr": 295,
      "author": {
        "id": 1000127
      },
      "writtenOn": "2022-01-26T00:11:31Z",
      "side": 1,
      "message": "it probably does not matter, but we could use a \u0027break\u0027 here?\nAlso how does the \u0027service\u0027 string look like? Is c.remoteServiceName a subset string of \u0027service\u0027 string or they should be the same?",
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae7f5112_bd1dad51",
        "filename": "pkg/grpc/client.go",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2022-01-27T15:59:39Z",
      "side": 1,
      "message": "being picky, maybe a better name ?",
      "range": {
        "startLine": 330,
        "startChar": 1,
        "endLine": 330,
        "endChar": 7
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc5f1caf_d62f66db",
        "filename": "pkg/grpc/client_test.go",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T16:17:49Z",
      "side": 1,
      "message": "bit of a nit i suppose, but latest Go guidance is to put test code in \u003cpkg\u003e_test pkg in same directory as \u003cpkg\u003e. This works for testing the \"external\" interface. This also assume you are not touching the internal bits of the package.",
      "range": {
        "startLine": 16,
        "startChar": 8,
        "endLine": 16,
        "endChar": 12
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eab7d076_13718127",
        "filename": "pkg/grpc/common.go",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T16:17:49Z",
      "side": 1,
      "message": "Do we really want to default to DebugLevel. Why not ErrorLevel?",
      "range": {
        "startLine": 27,
        "startChar": 45,
        "endLine": 27,
        "endChar": 59
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4483d397_aaeeedcc",
        "filename": "pkg/grpc/common.go",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 1000116
      },
      "writtenOn": "2022-01-27T15:59:39Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "eab7d076_13718127",
      "range": {
        "startLine": 27,
        "startChar": 45,
        "endLine": 27,
        "endChar": 59
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e8368d3_a87c63ef",
        "filename": "pkg/grpc/common_test.go",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T16:17:49Z",
      "side": 1,
      "message": "bit of a nit i suppose, but latest Go guidance is to put test code in \u003cpkg\u003e_test pkg in same directory as \u003cpkg\u003e. This works for testing the \"external\" interface. This also assume you are not touching the internal bits of the package.",
      "range": {
        "startLine": 16,
        "startChar": 8,
        "endLine": 16,
        "endChar": 12
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "244a3cb8_349eb1d0",
        "filename": "pkg/grpc/mock_core_service.go",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T16:17:49Z",
      "side": 1,
      "message": "if this is part of tests only then the standard comment about pkg name applies. as is this code will be compiled and incorporated with the production code.",
      "range": {
        "startLine": 16,
        "startChar": 8,
        "endLine": 16,
        "endChar": 12
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60d8e4b0_5bed2fe7",
        "filename": "pkg/grpc/server.go",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-01-26T16:17:49Z",
      "side": 1,
      "message": "if not needed then should be deleted.",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 170,
        "endChar": 24
      },
      "revId": "b365a52df8abee0701b1d9d0662b7c5bd84e773b",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    }
  ]
}
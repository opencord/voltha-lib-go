{
  "comments": [
    {
      "key": {
        "uuid": "32dc138f_95b48dad",
        "filename": "pkg/config/configmanager.go",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-20T14:27:46Z",
      "side": 1,
      "message": "Please remove, no sense setting here if it\u0027s overwritten on line 139.",
      "range": {
        "startLine": 136,
        "startChar": 1,
        "endLine": 136,
        "endChar": 50
      },
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abfb6005_8261a0b3",
        "filename": "pkg/config/configmanager.go",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2020-02-20T15:18:58Z",
      "side": 1,
      "message": "\"make sca\" shoudl catch this type of error. please make sure \"make sca\" runs clean on the patch set.",
      "parentUuid": "32dc138f_95b48dad",
      "range": {
        "startLine": 136,
        "startChar": 1,
        "endLine": 136,
        "endChar": 50
      },
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b19f947_8aa216a0",
        "filename": "pkg/config/logcontroller.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-20T14:27:46Z",
      "side": 1,
      "message": "Return error?  If returning, don\u0027t need to log?\n\nPlease comment with explanation if error should not be returned.",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf61cdc3_3a5e68e7",
        "filename": "pkg/config/logcontroller.go",
        "patchSetId": 9
      },
      "lineNbr": 65,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-02-20T17:50:19Z",
      "side": 1,
      "message": "I think this function is intended to be used as a goroutine. What is the expected behavior if it fails? Should we panic and exit the component?",
      "parentUuid": "2b19f947_8aa216a0",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d5fe8c_9959095b",
        "filename": "pkg/config/logcontroller.go",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-20T14:27:46Z",
      "side": 1,
      "message": "Rather than looping through all option, can use \n\nlevel, have :\u003d globalLogConfig[\"default\"]\n\nto check \u0026 get \"default\" level in one line.",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ff83e7d_d9a749e5",
        "filename": "pkg/config/logcontroller.go",
        "patchSetId": 9
      },
      "lineNbr": 168,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-02-20T14:27:46Z",
      "side": 1,
      "message": "Rather than looping through all option, can use \n\nlevel, have :\u003d globalLogConfig[\"default\"]\n\nto check \u0026 get \"default\" level in one line.",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ac4e117_9cfd90a1",
        "filename": "pkg/db/kvstore/client.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-02-20T14:15:33Z",
      "side": 1,
      "message": "The only difference between this API and the Watch API is that this one uses the key as a prefix.  You could augment the Watch() API with a variadic param, eg. Watch(ctx context.Context, key string, withprefix ...bool).    This way existing API do not change and if anyone needs a prefix then they can set the withprefix value.    In the Watch() implementation use the clientv3.WithPrefix only when withPrefix param is present and set to true,",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f01c83d_e923f5dd",
        "filename": "pkg/db/kvstore/client.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-02-20T17:50:19Z",
      "side": 1,
      "message": "If this suggestion is followed, then it seems we lose some static code analysis capabilities. The caller could supply multiple bools while the callee only understands one. It seems like if we really want to combine the two functions, using an ordinary argument (and putting up with the pain of the API change throughout the codebase) is the more traditional way to go.",
      "parentUuid": "3ac4e117_9cfd90a1",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1d2f2e9_425a4b43",
        "filename": "pkg/db/kvstore/client.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-02-20T18:47:53Z",
      "side": 1,
      "message": "Looking at the rw-core code + voltha-lib-go, there are only 2 places where the Watch API is invoked.  It therefore makes sense to just change the Watch API and add a \"withPrefix\" bool argument.",
      "parentUuid": "9f01c83d_e923f5dd",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56fa4ab8_5c434a43",
        "filename": "pkg/db/kvstore/client.go",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-02-20T19:31:19Z",
      "side": 1,
      "message": "We\u0027ve concluded a discussion in #voltha-stabilization and have decided that Khen\u0027s suggestion of combining the two functions and adding a single bool argument `withPrefix` (not a variadic) is how we should go. This will necessitate a patch to voltha-go. Please have the voltha-go patch ready for review at the same time the voltha-lib-go patch is to be merged.",
      "parentUuid": "d1d2f2e9_425a4b43",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7c906a7_32e1f0ce",
        "filename": "pkg/db/kvstore/etcdclient.go",
        "patchSetId": 9
      },
      "lineNbr": 325,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-02-20T14:15:33Z",
      "side": 1,
      "message": "See my comments on the interface.",
      "revId": "11ebdae43fc7848e199a7b28632c9920dcc0ddab",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}
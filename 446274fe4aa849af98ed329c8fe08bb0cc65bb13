{
  "comments": [
    {
      "key": {
        "uuid": "c560ad66_73d82044",
        "filename": "pkg/log/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-07-22T14:57:33Z",
      "side": 1,
      "message": "Rather than returning io.Closer, consider returning a close function of type func().\n\nAnd put the logic for TerminateTracing in this func.  Something like:\n\nreturn func(){\n\tif err :\u003d c.Close(); err !\u003d nil {\n\t\tdefaultLogger.Error(context.Background(), \"error-while-closing-jaeger-tracer\", Fields{\"err\": err})\n\t}\n}",
      "range": {
        "startLine": 61,
        "startChar": 115,
        "endLine": 61,
        "endChar": 124
      },
      "revId": "446274fe4aa849af98ed329c8fe08bb0cc65bb13",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4190c4df_50d45f95",
        "filename": "pkg/log/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000526
      },
      "writtenOn": "2020-07-22T16:04:42Z",
      "side": 1,
      "message": "I had considered this as well earlier. But as I am returning from multiple places in this method, I will have to either:\n- Put duplicate definition of this method at each return statement having ip.Closer instance\n- Or, refactor this method to add if/else blocks to perform a single return at the end\n\nBoth of these will reduce readability of this code. I hope it is OK to continue with this approach of a named function.",
      "parentUuid": "c560ad66_73d82044",
      "range": {
        "startLine": 61,
        "startChar": 115,
        "endLine": 61,
        "endChar": 124
      },
      "revId": "446274fe4aa849af98ed329c8fe08bb0cc65bb13",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33c656b9_4531b500",
        "filename": "pkg/log/utils.go",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2020-07-22T16:54:53Z",
      "side": 1,
      "message": "I suppose it works, I just like reducing the complexity that the caller has to deal with as much as possible.\n\nAlternative is to have a helper that accepts a closer and returns a close func.\n\nfunc closeHelper(c io.Closer) func() {\n\treturn func(){\n\t\tif err :\u003d c.Close(); err !\u003d nil {\n\t\t\tdefaultLogger.Error(context.Background(), \"error-while-closing-jaeger-tracer\", Fields{\"err\": err})\n\t\t}\n\t}\n}\n\nAnd `return closeHelper(closer)` anywhere that io.Closer is currently returned.\n\nI\u0027ve given a +1, so you can choose to keep the current implementation.",
      "parentUuid": "4190c4df_50d45f95",
      "range": {
        "startLine": 61,
        "startChar": 115,
        "endLine": 61,
        "endChar": 124
      },
      "revId": "446274fe4aa849af98ed329c8fe08bb0cc65bb13",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388",
      "unresolved": false
    }
  ]
}
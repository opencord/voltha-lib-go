{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "52859db8_f694a930",
        "filename": "pkg/events/events_proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-03-28T20:52:22Z",
      "side": 1,
      "message": "nit: given that key is only used here, you could put the strconv.FormantInt in-line and avoid the assignment.",
      "range": {
        "startLine": 171,
        "startChar": 37,
        "endLine": 171,
        "endChar": 40
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25ec51a2_89f76bc4",
        "filename": "pkg/events/events_proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 171,
      "author": {
        "id": 1000635
      },
      "writtenOn": "2022-03-29T06:58:07Z",
      "side": 1,
      "message": "addressed",
      "parentUuid": "52859db8_f694a930",
      "range": {
        "startLine": 171,
        "startChar": 37,
        "endLine": 171,
        "endChar": 40
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a104cf6_ef2c1a9a",
        "filename": "pkg/events/events_proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 235,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-03-28T20:52:22Z",
      "side": 1,
      "message": "the error is caught and logged as an error, but not returned. if this is really an error then it doesn\u0027t really need to be logged it just needs to be returned and the caller can determine if it should be logged as an error or propagated. If this really isn\u0027t an error then it should be logged as a warning, debug, or informational.",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 86
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7415974_4cf7e0eb",
        "filename": "pkg/events/events_proxy.go",
        "patchSetId": 6
      },
      "lineNbr": 235,
      "author": {
        "id": 1000635
      },
      "writtenOn": "2022-03-29T06:58:07Z",
      "side": 1,
      "message": "changed the log to warning",
      "parentUuid": "1a104cf6_ef2c1a9a",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 86
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e9673ac_10cdfae1",
        "filename": "pkg/kafka/sarama_client.go",
        "patchSetId": 6
      },
      "lineNbr": 1164,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-03-28T20:52:22Z",
      "side": 1,
      "message": "the logging of an error should be left to the caller, as the caller might be able to work around the error and thus it is not an error. if you would like to log here, then this should be as a debug statement.",
      "range": {
        "startLine": 1164,
        "startChar": 0,
        "endLine": 1164,
        "endChar": 104
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6446f94b_1f39dc95",
        "filename": "pkg/kafka/sarama_client.go",
        "patchSetId": 6
      },
      "lineNbr": 1164,
      "author": {
        "id": 1000635
      },
      "writtenOn": "2022-03-29T06:58:07Z",
      "side": 1,
      "message": "mad the log level as debug",
      "parentUuid": "4e9673ac_10cdfae1",
      "range": {
        "startLine": 1164,
        "startChar": 0,
        "endLine": 1164,
        "endChar": 104
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1f1ac05_68a61b1b",
        "filename": "pkg/kafka/sarama_client.go",
        "patchSetId": 6
      },
      "lineNbr": 1170,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-03-28T20:52:22Z",
      "side": 1,
      "message": "the logging to an error should be left to the caller, as the caller might be able to work around the error and thus it is not an error. if you would like to log here, then this should be as a debug statement.",
      "range": {
        "startLine": 1170,
        "startChar": 0,
        "endLine": 1170,
        "endChar": 104
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "634b6580_3c602066",
        "filename": "pkg/kafka/sarama_client.go",
        "patchSetId": 6
      },
      "lineNbr": 1170,
      "author": {
        "id": 1000635
      },
      "writtenOn": "2022-03-29T06:58:07Z",
      "side": 1,
      "message": "made the log level as debug",
      "parentUuid": "c1f1ac05_68a61b1b",
      "range": {
        "startLine": 1170,
        "startChar": 0,
        "endLine": 1170,
        "endChar": 104
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f70e1fd_3c6937e9",
        "filename": "pkg/mocks/kafka/kafka_client.go",
        "patchSetId": 6
      },
      "lineNbr": 180,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2022-03-28T20:52:22Z",
      "side": 1,
      "message": "This is in a mock, so this comment may not apply, but this implementation returns a list of topic as well as logs the function as unimplemented. Seems to me it should return a mock list of values or return an Unimplemented error.",
      "range": {
        "startLine": 179,
        "startChar": 1,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2390e51f_b6889ff0",
        "filename": "pkg/mocks/kafka/kafka_client.go",
        "patchSetId": 6
      },
      "lineNbr": 180,
      "author": {
        "id": 1000635
      },
      "writtenOn": "2022-03-29T06:58:07Z",
      "side": 1,
      "message": "addressed the comment",
      "parentUuid": "0f70e1fd_3c6937e9",
      "range": {
        "startLine": 179,
        "startChar": 1,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "323e8b518ecd30ca1a793d5dab4deb6d990ba3fb",
      "serverId": "2a2bfe1b-c5c2-48ed-9ac8-16438ab24388"
    }
  ]
}